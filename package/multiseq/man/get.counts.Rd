% Generated by roxygen2 (4.0.2): do not edit by hand
\name{get.counts}
\alias{get.counts}
\title{Prepare input for multiseq function extracting counts in a genomic region from \code{bam}, \code{hdf5}, or \code{bigWig} files.}
\usage{
get.counts(samplesheet = NULL, region = NULL, onlyoneend = FALSE)
}
\arguments{
\item{samplesheet:}{a string or a data frame of size N equal to the number of samples. If a string it should be the path to a samplesheet; the samplesheet should contain a column with header \code{SampleID} and a column with header either \code{bigWigPath} or \code{h5FullPath} or \code{bigWigPath}. If a data frame, \code{samples$SampleID} must be specified and either \code{samples$bigWigPath} or \code{samples$h5FullPath} or \code{samples$bamReads} must be specified.}

\item{region:}{a string specifying a genomic region: reference sequence name, start position, end position}

\item{onlyonend:}{a bool, defaults to FALSE; use TRUE if input is in bam format and only first end of the paired end read should be used.}
}
\value{
a matrix with \code{N} rows and \code{end-start+1} columns containing the number of reads that start at each base in the specified region in each sample. Rownames correspond to \code{samples$SampleID}
}
\description{
This functions extracts read counts from \code{bam}, \code{hdf5}, or \code{bigWig} files in a genomic region, preparing input for \code{\link{multiseq}}. If \code{samples$bamReads} is specified then this function extracts reads from the bam files in \code{samples$bamReads} using \code{samtools} (which must be in the USER's path) (no filter applied). Else if \code{samples$h5FullPath} is specified this function extracts reads from the \code{hdf5} files in \code{samples$h5FullPath} using the R package \code{rhdf5}. If \code{samples$bigWigPath} is specified this function extracts reads from \code{bigWig} files using the executable \code{bigWigToWig} (which must be in the USER's path).
}
\examples{
\dontrun{
setwd(file.path(path.package("multiseq"),"extdata","sim"))
samplesheet="samplesheet.sim.txt"
region="chr1:154206209-154214400"
x=get.counts(samplesheet, region)
}
}

